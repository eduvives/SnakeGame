/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.snake.view;

import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author Eduard
 */
public class SettingsPanel extends javax.swing.JDialog {

    private List<JComboBox<String>> comboBoxes;
    private BlenderPanel blenderSettings;
    
    /**
     * Creates new form SettingsPanel
     */
    public SettingsPanel(MenuPanel menuPanel) {
        super(menuPanel, "Game Settings");
        initComponents();
        
        comboBoxes = Arrays.asList(boardCmb, speedCmb, foodCmb, modeCmb);
        
        pack();
        setLocationRelativeTo(null);
        setFocusable(true);
        setWindowClosingListener();
        
        blenderSettings = new BlenderPanel(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boardLabel = new javax.swing.JLabel();
        speedLabel = new javax.swing.JLabel();
        boardCmb = new javax.swing.JComboBox<>();
        foodLabel = new javax.swing.JLabel();
        speedCmb = new javax.swing.JComboBox<>();
        foodCmb = new javax.swing.JComboBox<>();
        modeLabel = new javax.swing.JLabel();
        modeCmb = new javax.swing.JComboBox<>();
        randomBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        playBtn = new javax.swing.JButton();
        blenderBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        boardLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        boardLabel.setText("Board");
        boardLabel.setPreferredSize(new java.awt.Dimension(60, 26));

        speedLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        speedLabel.setText("Speed");
        speedLabel.setPreferredSize(new java.awt.Dimension(60, 26));

        boardCmb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        foodLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        foodLabel.setText("Food");
        foodLabel.setPreferredSize(new java.awt.Dimension(60, 26));

        speedCmb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        speedCmb.setPreferredSize(new java.awt.Dimension(89, 26));

        foodCmb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        modeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        modeLabel.setText("Mode");
        modeLabel.setPreferredSize(new java.awt.Dimension(60, 26));

        modeCmb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        modeCmb.setPreferredSize(new java.awt.Dimension(89, 26));
        modeCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeCmbActionPerformed(evt);
            }
        });

        randomBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        randomBtn.setText("Random");
        randomBtn.setPreferredSize(new java.awt.Dimension(100, 27));
        randomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomBtnActionPerformed(evt);
            }
        });

        resetBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.setPreferredSize(new java.awt.Dimension(100, 27));

        playBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        playBtn.setText("Play");
        playBtn.setPreferredSize(new java.awt.Dimension(100, 27));

        blenderBtn.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        blenderBtn.setText("âš™");
        blenderBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        blenderBtn.setMaximumSize(new java.awt.Dimension(26, 26));
        blenderBtn.setMinimumSize(new java.awt.Dimension(26, 26));
        blenderBtn.setPreferredSize(new java.awt.Dimension(26, 26));
        blenderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blenderBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        backBtn.setText("ðŸ¡¨");
        backBtn.setMargin(new java.awt.Insets(0, 0, 0, 2));
        backBtn.setMaximumSize(new java.awt.Dimension(26, 26));
        backBtn.setMinimumSize(new java.awt.Dimension(26, 26));
        backBtn.setPreferredSize(new java.awt.Dimension(26, 26));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(modeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(foodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(speedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(boardCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(speedCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(foodCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(modeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blenderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(randomBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boardCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(speedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(speedCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foodCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blenderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(randomBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void randomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomBtnActionPerformed
        
        Random random = new Random();
        
        for (JComboBox<String> comboBox : comboBoxes) {
            int itemCount = comboBox.getItemCount();
            if (itemCount > 0) {
                int randomIndex = random.nextInt(itemCount);
                comboBox.setSelectedIndex(randomIndex);
            }
        }
    }//GEN-LAST:event_randomBtnActionPerformed

    private void modeCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeCmbActionPerformed
        if (modeCmb.getSelectedItem() == "Blender") {
            blenderBtn.setVisible(true);
        } else {
            blenderBtn.setVisible(false);
        }
    }//GEN-LAST:event_modeCmbActionPerformed

    private void blenderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blenderBtnActionPerformed
        // Al no abrir y cerrar la ventana con mucha frecuencia, seguimos usando dispose() y asÃ­ aprovechamos la animaciÃ³n de creaciÃ³n de ventana.
        this.dispose(); // this.setVisible(false);
        blenderSettings.setVisible(true);
    }//GEN-LAST:event_blenderBtnActionPerformed

    public void setBackBtnListener(ActionListener listener) {
        backBtn.addActionListener(listener);
    }
    
    public void setPlayBtnListener(ActionListener listener) {
        playBtn.addActionListener(listener);
    }
    
    public void setResetBtnListener(ActionListener listener) {
        resetBtn.addActionListener(listener);
    }
    
    public void setBoardCmbModel(String[] names, int selectedIndex) {
        boardCmb.setModel(new DefaultComboBoxModel<>(names));
        boardCmb.setSelectedIndex(selectedIndex);
    } 
   
    public void setSpeedCmbModel(String[] names, int selectedIndex) {
        speedCmb.setModel(new DefaultComboBoxModel<>(names));
        speedCmb.setSelectedIndex(selectedIndex);
    }
    
    public void setFoodCmbModel(String[] names, int selectedIndex) {
        foodCmb.setModel(new DefaultComboBoxModel<>(names));
        foodCmb.setSelectedIndex(selectedIndex);
    }
    
    public void setModeCmbModel(String[] names, int selectedIndex) {
        modeCmb.setModel(new DefaultComboBoxModel<>(names));
        modeCmb.setSelectedIndex(selectedIndex);
    }
    
    public String getBoardCmbSelectedItem() {
        return (String) boardCmb.getSelectedItem();
    }
    
    public String getSpeedCmbSelectedItem() {
        return (String) speedCmb.getSelectedItem();
    }
    
    public String getFoodCmbSelectedItem() {
        return (String) foodCmb.getSelectedItem();
    }
    
    public String getModeCmbSelectedItem() {
        return (String) modeCmb.getSelectedItem();
    }
    
    public void setWindowClosingListener () {
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                playBtn.doClick();
            }
        });
    }
    
    public BlenderPanel getBlenderSettings() {
        return blenderSettings;
    }

    public List<JComboBox<String>> getComboBoxes() {
        return comboBoxes;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton blenderBtn;
    private javax.swing.JComboBox<String> boardCmb;
    private javax.swing.JLabel boardLabel;
    private javax.swing.JComboBox<String> foodCmb;
    private javax.swing.JLabel foodLabel;
    private javax.swing.JComboBox<String> modeCmb;
    private javax.swing.JLabel modeLabel;
    private javax.swing.JButton playBtn;
    private javax.swing.JButton randomBtn;
    private javax.swing.JButton resetBtn;
    private javax.swing.JComboBox<String> speedCmb;
    private javax.swing.JLabel speedLabel;
    // End of variables declaration//GEN-END:variables
}
